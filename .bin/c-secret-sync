#!/usr/bin/env bash

[[ "${TRACE}" ]] && set -x
set -eou pipefail
shopt -s nullglob

files() {
  git --git-dir=$HOME/.cfg/ --work-tree=$HOME ls-files
}

decrypt() {
  sops -d "${file}" >"${unencrypted_filename}"
}

encrypt() {
  sops -e "${unencrypted_filename}" >"${file}"
}

content-unchanged() {
  if [ "$(sops -d "${file}" | md5)" == "$(cat "${unencrypted_filename}" | md5)" ]; then
    return 0
  else
    return 1
  fi
}

verify() {
  unencrypted_filename="$(sed 's/\.enc//' <<<"${file}")"

  echo -n "verifying ${file}: "

  # If file has never been decrypted
  if ! [[ -f "${unencrypted_filename}" ]]; then
    echo "decrypting for the first time"
    decrypt
    return
  fi

  if content-unchanged; then
    echo "unchanged, skipping"
    return
  fi

  # If encrypted file is older than the decrypted file
  if [ "${file}" -ot "${unencrypted_filename}" ]; then
    echo "encrypting changes"
    encrypt
    return
  fi

  # If encrypted file is newer than the decrypted file
  if [ "${file}" -nt "${unencrypted_filename}" ]; then
    echo "decrypting upstream changes"
    decrypt
    return
  fi
}

main() {
  pushd ~ >/dev/null
  for file in $(files); do
    if [[ "${file}" == *".enc" ]]; then
      verify
    fi
  done
  popd >/dev/null
}

main "$@"
